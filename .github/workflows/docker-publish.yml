name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  list-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: List files in the repository
        run: ls -al

  check-db-connection:
    runs-on: ubuntu-latest
    needs: list-files

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin12345
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Wait for PostgreSQL to be healthy
        run: |
          echo "Waiting for PostgreSQL to be healthy..."
          until [ "`docker inspect -f {{.State.Health.Status}} postgres`" == "healthy" ]; do
            sleep 5;
          done
          echo "PostgreSQL is healthy."

      - name: Verify database connection
        run: |
          echo "Checking database connection..."
          PGPASSWORD=admin12345 pg_isready -h localhost -p 5432 -U postgres -d postgres
          if [ $? -eq 0 ]; then
            echo "Database connection is OK."
          else
            echo "Failed to connect to database."
            exit 1
          fi

  build-and-push:
    runs-on: ubuntu-latest
    needs: [list-files, check-db-connection]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kiii-project:latest
