name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  list-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: List files in the repository
        run: ls -al

  check-required-files:
    runs-on: ubuntu-latest
    needs: list-files

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for required files
        run: |
          required_files=("Dockerfile" "docker-compose.yaml" "requirements.txt")
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Error: $file is missing!"
              exit 1
            fi
          done
          echo "All required files are present."

  build-and-push:
    runs-on: ubuntu-latest
    needs: [list-files, check-required-files]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kiii-project:latest
  
  deploy-to-vercel:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel --prod --token $VERCEL_TOKEN --scope $VERCEL_ORG_ID --yes
